Terminals unused in grammar

    SIN
    COS
    TAN
    LN
    EXP
    SQRT


Grammar

    0 $accept: Program $end

    1 Program: Program Statement SEMICO
    2        | %empty

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET
    4          | ORIGIN IS L_BRACKET Expression COMMA Expression R_BRACKET
    5          | SCALE IS L_BRACKET Expression COMMA Expression R_BRACKET
    6          | ROT IS Expression

    7 Expression: T
    8           | CONST_ID
    9           | Expression PLUS Expression
   10           | Expression MINUS Expression
   11           | Expression MUL Expression
   12           | Expression DIV Expression
   13           | Expression POWER Expression
   14           | L_BRACKET Expression R_BRACKET
   15           | PLUS Expression
   16           | MINUS Expression
   17           | FUNC L_BRACKET Expression R_BRACKET
   18           | ERRTOKEN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST_ID (258) 8
    FUNC (259) 17
    FOR (260) 3
    T (261) 3 7
    FROM (262) 3
    TO (263) 3
    STEP (264) 3
    DRAW (265) 3
    ORIGIN (266) 4
    SCALE (267) 5
    ROT (268) 6
    IS (269) 4 5 6
    SIN (270)
    COS (271)
    TAN (272)
    LN (273)
    EXP (274)
    SQRT (275)
    COMMA (276) 3 4 5
    L_BRACKET (277) 3 4 5 14 17
    R_BRACKET (278) 3 4 5 14 17
    SEMICO (279) 1
    ERRTOKEN (280) 18
    PLUS (281) 9 15
    MINUS (282) 10 16
    MUL (283) 11
    DIV (284) 12
    UNSUB (285)
    POWER (286) 13


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Program (33)
        on left: 1 2
        on right: 0 1
    Statement (34)
        on left: 3 4 5 6
        on right: 1
    Expression (35)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 3 4 5 6 9 10 11 12 13 14 15 16 17


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (Program)

    Program  go to state 1


State 1

    0 $accept: Program . $end
    1 Program: Program . Statement SEMICO

    $end    shift, and go to state 2
    FOR     shift, and go to state 3
    ORIGIN  shift, and go to state 4
    SCALE   shift, and go to state 5
    ROT     shift, and go to state 6

    Statement  go to state 7


State 2

    0 $accept: Program $end .

    $default  accept


State 3

    3 Statement: FOR . T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET

    T  shift, and go to state 8


State 4

    4 Statement: ORIGIN . IS L_BRACKET Expression COMMA Expression R_BRACKET

    IS  shift, and go to state 9


State 5

    5 Statement: SCALE . IS L_BRACKET Expression COMMA Expression R_BRACKET

    IS  shift, and go to state 10


State 6

    6 Statement: ROT . IS Expression

    IS  shift, and go to state 11


State 7

    1 Program: Program Statement . SEMICO

    SEMICO  shift, and go to state 12


State 8

    3 Statement: FOR T . FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET

    FROM  shift, and go to state 13


State 9

    4 Statement: ORIGIN IS . L_BRACKET Expression COMMA Expression R_BRACKET

    L_BRACKET  shift, and go to state 14


State 10

    5 Statement: SCALE IS . L_BRACKET Expression COMMA Expression R_BRACKET

    L_BRACKET  shift, and go to state 15


State 11

    6 Statement: ROT IS . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 23


State 12

    1 Program: Program Statement SEMICO .

    $default  reduce using rule 1 (Program)


State 13

    3 Statement: FOR T FROM . Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 24


State 14

    4 Statement: ORIGIN IS L_BRACKET . Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 25


State 15

    5 Statement: SCALE IS L_BRACKET . Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 26


State 16

    8 Expression: CONST_ID .

    $default  reduce using rule 8 (Expression)


State 17

   17 Expression: FUNC . L_BRACKET Expression R_BRACKET

    L_BRACKET  shift, and go to state 27


State 18

    7 Expression: T .

    $default  reduce using rule 7 (Expression)


State 19

   14 Expression: L_BRACKET . Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 28


State 20

   18 Expression: ERRTOKEN .

    $default  reduce using rule 18 (Expression)


State 21

   15 Expression: PLUS . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 29


State 22

   16 Expression: MINUS . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 30


State 23

    6 Statement: ROT IS Expression .
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35

    $default  reduce using rule 6 (Statement)


State 24

    3 Statement: FOR T FROM Expression . TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    TO     shift, and go to state 36
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 25

    4 Statement: ORIGIN IS L_BRACKET Expression . COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    COMMA  shift, and go to state 37
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 26

    5 Statement: SCALE IS L_BRACKET Expression . COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    COMMA  shift, and go to state 38
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 27

   17 Expression: FUNC L_BRACKET . Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 39


State 28

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression
   14           | L_BRACKET Expression . R_BRACKET

    R_BRACKET  shift, and go to state 40
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    POWER      shift, and go to state 35


State 29

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression
   15           | PLUS Expression .

    POWER  shift, and go to state 35

    $default  reduce using rule 15 (Expression)


State 30

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression
   16           | MINUS Expression .

    POWER  shift, and go to state 35

    $default  reduce using rule 16 (Expression)


State 31

    9 Expression: Expression PLUS . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 41


State 32

   10 Expression: Expression MINUS . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 42


State 33

   11 Expression: Expression MUL . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 43


State 34

   12 Expression: Expression DIV . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 44


State 35

   13 Expression: Expression POWER . Expression

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 45


State 36

    3 Statement: FOR T FROM Expression TO . Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 46


State 37

    4 Statement: ORIGIN IS L_BRACKET Expression COMMA . Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 47


State 38

    5 Statement: SCALE IS L_BRACKET Expression COMMA . Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 48


State 39

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression
   17           | FUNC L_BRACKET Expression . R_BRACKET

    R_BRACKET  shift, and go to state 49
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    POWER      shift, and go to state 35


State 40

   14 Expression: L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 14 (Expression)


State 41

    9 Expression: Expression . PLUS Expression
    9           | Expression PLUS Expression .
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35

    $default  reduce using rule 9 (Expression)


State 42

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   10           | Expression MINUS Expression .
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35

    $default  reduce using rule 10 (Expression)


State 43

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   11           | Expression MUL Expression .
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    POWER  shift, and go to state 35

    $default  reduce using rule 11 (Expression)


State 44

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   12           | Expression DIV Expression .
   13           | Expression . POWER Expression

    POWER  shift, and go to state 35

    $default  reduce using rule 12 (Expression)


State 45

    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression
   13           | Expression POWER Expression .

    POWER  shift, and go to state 35

    $default  reduce using rule 13 (Expression)


State 46

    3 Statement: FOR T FROM Expression TO Expression . STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    STEP   shift, and go to state 50
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 47

    4 Statement: ORIGIN IS L_BRACKET Expression COMMA Expression . R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    R_BRACKET  shift, and go to state 51
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    POWER      shift, and go to state 35


State 48

    5 Statement: SCALE IS L_BRACKET Expression COMMA Expression . R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    R_BRACKET  shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    POWER      shift, and go to state 35


State 49

   17 Expression: FUNC L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 17 (Expression)


State 50

    3 Statement: FOR T FROM Expression TO Expression STEP . Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 53


State 51

    4 Statement: ORIGIN IS L_BRACKET Expression COMMA Expression R_BRACKET .

    $default  reduce using rule 4 (Statement)


State 52

    5 Statement: SCALE IS L_BRACKET Expression COMMA Expression R_BRACKET .

    $default  reduce using rule 5 (Statement)


State 53

    3 Statement: FOR T FROM Expression TO Expression STEP Expression . DRAW L_BRACKET Expression COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    DRAW   shift, and go to state 54
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 54

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW . L_BRACKET Expression COMMA Expression R_BRACKET

    L_BRACKET  shift, and go to state 55


State 55

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET . Expression COMMA Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 56


State 56

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression . COMMA Expression R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    COMMA  shift, and go to state 57
    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    POWER  shift, and go to state 35


State 57

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA . Expression R_BRACKET

    CONST_ID   shift, and go to state 16
    FUNC       shift, and go to state 17
    T          shift, and go to state 18
    L_BRACKET  shift, and go to state 19
    ERRTOKEN   shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    Expression  go to state 58


State 58

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression . R_BRACKET
    9 Expression: Expression . PLUS Expression
   10           | Expression . MINUS Expression
   11           | Expression . MUL Expression
   12           | Expression . DIV Expression
   13           | Expression . POWER Expression

    R_BRACKET  shift, and go to state 59
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    POWER      shift, and go to state 35


State 59

    3 Statement: FOR T FROM Expression TO Expression STEP Expression DRAW L_BRACKET Expression COMMA Expression R_BRACKET .

    $default  reduce using rule 3 (Statement)
